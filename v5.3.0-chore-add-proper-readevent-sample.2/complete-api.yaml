swagger: '2.0'
info:
  title: 'Logistics Parcel Reading Stream API'
  description: "The kafka topic exposes ReadingEvent containing data captured at the DWS-Tunnel or by the operator during manual bulk coding like dimension, weighing and image recognition.\n"
  contact:
    name: delcorpochd
  version: 5.3.0-chore-add-proper-readevent-sample.2
host: 'server:8080'
basePath: Kafka
paths:
  logistics.parcel.reading.Mailpiece-event:
    get:
      summary: 'topic for publishing reading data'
      description: null
      tags:
        - Kafka
      responses:
        '200':
          description: null
          schema: {type: array, $ref: 'ReadEvent'}
definitions:
  Image:
    type: object
    properties:
      imageKey:
        type: string
        description: "The imageKey is assigned by ACS and serves as a key across all systems for the coding in Vietnam.\nThe key is only present when the mailpiece is coded automatically.\n(old: parpicId from RPP message from ACS to PDS).\n[DEPRECATED] to be removed as soon as the application ReadingDataProducer has dropped this field."
        maxLength: 200
      key:
        type: string
        description: 'Key of the image assigned by the coding system and used across all systems to identify the image.'
      sourceSystem:
        type: string
        description: 'Device which captured the image (e.g. DWS).'
      sourceInstance:
        type: string
        description: 'Instance of the device (e.g. 01, 02)'
      sourceLocation:
        $ref: 'Location'
        description: 'Location / centre where image was captured.'
      url:
        type: string
        description: 'Direct url to the image.'
      sourceStation:
        type: string
        description: "Indicates on which device the image was created.\nexample: HAE-ACS0013\n[DEPRECATED] use sourceSystem, sourceInstance and sourceLocationInstead. to be removed as soon as the application ReadingDataProducer has dropped this field."
        maxLength: 11
    required:
      - sourceSystem
      - sourceInstance
      - sourceLocation
    additionalProperties: false
    description: 'All information about an image and its references.'
  InformationCarrierFormat:
    type: string
    enum:
      - NOT_RECOGNIZED
      - MAILPIECE_ID
      - GLOBAL_MAILPIECE_ID
      - DMC
      - CONVEYING_AID
      - BOX_ID
    description: "Defines the format of the barcode\nNOT_RECOGNIZED = Format not recognised\nMAILPIECE_ID = The barcode is a MailpieceId.\nGLOBAL_MAILPIECE_ID = The barcode is an international MailpieceId.\nDMC = The barcode is a data matrix code.\nCONVEYING_AID = The barcode is a DX code of the conveing aid (aid type).\nBOX_ID = The barcode is a BoxId."
  InformationCarrierSource:
    type: string
    enum:
      - IMAGE
      - RFID
    description: "Defines the source of the barcode\nIMAGE: barcode comes from an image\nRFID: Barcode comes from an RFID tag"
  InformationCarrier:
    type: object
    properties:
      format:
        $ref: 'InformationCarrierFormat'
      value:
        type: string
      source:
        $ref: 'InformationCarrierSource'
    required:
      - format
      - value
      - source
    additionalProperties: false
    description: 'Contains information on the captured barcodes'
  LegalForTradeState:
    type: object
    properties:
      conveyorSpeedError:
        type: boolean
        description: 'Conveyor speed is out of tolerance.'
      storageError:
        type: boolean
        description: 'Alibi storage error.'
      dimensionError:
        type: boolean
        description: 'VMS data is not legal for trade.'
      weightError:
        type: boolean
        description: 'Weight data not legal for trade.'
    required:
      - conveyorSpeedError
      - storageError
      - dimensionError
      - weightError
    additionalProperties: false
    description: "Detailed information on legal for trade relevant measurements.\n\n- If all flags are false, the measurements are legal for trade.\n- If only weightError is true, dimension measurement is legal for trade.\n- If only dimensionError is true, weight measurement is legal for trade.\n- Otherwise, measurements are not legal for trade."
  Int:
    type: integer
    description: '<a href="https://swagger.io/docs/specification/data-models/data-types/#numbers">Number @asType integer</a>'
  Location:
    type: object
    properties:
      key:
        type: string
        description: 'Unique identifier (ONRP).'
        maxLength: 200
      name:
        type: string
        description: 'Name of location, e.g. Paketzentrum H채rkingen'
        maxLength: 200
      shortName:
        type: string
        description: 'Short name of the site, e.g. CAD, FRA, DAI.'
        maxLength: 6
      postcode6:
        $ref: 'Int'
        description: 'addresspostcode PLZ6, e.g. 462000'
        maxLength: 6
    required:
      - postcode6
    additionalProperties: false
    description: "Identifies the different locations where the Post operates, e.g.: sorting centers, post offices, offices, etc.\nIn the scope of the Sorting Systems all fields can be set. In a broader context, e.g. delivery office, only the postcode6 is guaranteed to exist."
  Long:
    type: integer
    description: '<a href="https://swagger.io/docs/specification/data-models/data-types/#numbers">Number @asType integer</a> as signed 64-bit long integer.'
    minimum: -9223372036854775000
    maximum: 9223372036854775000
    format: int64
  MailpieceDimension:
    type: object
    properties:
      length:
        $ref: 'Int'
        description: 'Length of the mailpiece in millimeters.'
        minimum: 0
      width:
        $ref: 'Int'
        description: 'Width of the mailpiece in millimeters.'
        minimum: 0
      height:
        $ref: 'Int'
        description: 'Height of the mailpiece in millimeters.'
        minimum: 0
      boxVolume:
        $ref: 'Long'
        description: 'Box volume of the mailpiece in cubic millimeter (mm3) calculated as width x length x height.'
        minimum: 0
      boxVolumeRatio:
        $ref: 'Int'
        description: "Ratio of the mailpiece' real volume to its box volume as a percentage.\nrealVolume / boxVolume in %"
        minimum: 0
      realVolume:
        $ref: 'Long'
        description: 'Volume measured by surface scan. Real volume of the mailpiece in cubic millimeter (mm3).'
        minimum: 0
      legalForTrade:
        type: boolean
        description: "Whether the mailpiece dimension is legal for trade.\nThe measurement device was calibrated."
    additionalProperties: false
    description: 'Dimensions related information on the mailpiece.'
  MailpieceType:
    type: string
    enum:
      - UNKNOWN
      - LETTER
      - LETTER_BUNDLE
      - FLAT
      - FLAT_BUNDLE
      - PARCEL
      - SMALL_PARCEL
      - BULKY_GOOD
      - GENERAL_CARGO
    description: "UNKNOWN = Nicht bekannt\nLETTER = Brief\nLETTER_BUNDLE = Brief B체ndel\nFLAT = Grossbrief\nFLAT_BUNDLE = Grossbrief B체ndel\nPARCEL = Paket\nSMALL_PARCEL = Kleinpaket\nBULKY_GOOD = Sperrgut\nGENERAL_CARGO = St체ckgut"
  MailpieceWeight:
    type: object
    properties:
      weight:
        $ref: 'Int'
        description: 'Weight at first weighing in grams.'
        minimum: 0
      deviceId:
        type: string
        description: "The designation of the scale for the first weighing and its number.\ndevide id of the scale (e.g. HAE-024)"
      legalForTrade:
        type: boolean
        description: "Whether the mailpiece dimension is legal for trade.\nThe scale was calibrated."
    additionalProperties: false
    description: 'Weight related information on the mailpiece.'
  PhysicalProperties:
    type: object
    properties:
      mailpieceDimension:
        $ref: 'MailpieceDimension'
        description: 'Dimensions of a parcel.'
      mailpieceWeight:
        $ref: 'MailpieceWeight'
        description: 'Weight of a parcel.'
      boxVolumeRatio:
        $ref: 'Int'
        description: "**DEPRECATED**\nRatio of the mailpiece' real volume to its box volume in percent\nrealVolume / boxVolume in %"
      legalForTradeState:
        $ref: 'LegalForTradeState'
        description: '**DEPRECATED** LFT-Status (Legal for Trade) enum'
    additionalProperties: false
    description: 'All the physical properties of a Parcel.'
  DateTime:
    type: string
    description: "<a href=\"https://swagger.io/docs/specification/data-models/data-types/#string\">String @format date-time</a>,\nas defined by <a href=\"https://tools.ietf.org/html/rfc3339#section-5.6\">RFC 3339, section 5.6</a>,\nfor example: <code>2014-05-22T10:42:42.542+00:00</code>."
    format: date-time
  UUID:
    type: string
    description: "<a href=\"https://swagger.io/docs/specification/data-models/data-types/#string\">String @format uuid</a>\n(even '@format uuid' is not specified)."
    format: uuid
  ReadEvent:
    type: object
    properties:
      mailpieceId:
        type: string
        description: 'Id of the Mailpiece.'
        maxLength: 200
      globalMailpieceId:
        type: string
        description: "International ID of the mailpiece.\nExample: EP923689367CH\nValidation:"
        pattern: '[A-Z]{2}[0-9]{9}[A-Z]{2}'
      sortCenter:
        $ref: 'Location'
        description: "Sort center where the reading ocurred (e.g. Daillens, Haerkingen).\n[DEPRECATED] to be removed as soon as sortingUnit is always filled."
      processPoint:
        type: string
        description: "processPoint containing identification of a coding station / supply line\nThe attribute adheres to the\nBezeichnungskonzept RPZ (RL_RPZ_Bezeichnungskonzept_V04.04.pdf) for new installations of sorting units and yard equipment\nBezeichnungskonzept PP2000 (SOE Bezeichnungskonzept V2.1.pdf) old sorting units based on the standards of program PP2000"
      concatenatedSupplyLineId:
        type: string
        description: "concatenated identification of a coding station / supply line extracted from the PP2000 fields Header.From and ERDAT.Ort\ne.g. \"CLC31+BCR02\"\n[DEPRECATED] to be removed as soon as processPoint is always filled."
      sortingUnit:
        $ref: 'SortingUnit'
        description: "Unique identifier of the sorting unit at a specific location.\nACTION: field will be mandatory"
        maxLength: 200
      readingData:
        $ref: 'ReadingData'
        description: 'Data captured by the dimension and weighing devices.'
    required:
      - readingData
    additionalProperties: false
    description: 'Physical attributes, images and barcodes of a mailpiece.'
  ReadingData:
    type: object
    properties:
      readingDataId:
        type: string
        description: 'Unique Id related to this set of data.'
      readingTimestamp:
        $ref: 'DateTime'
        description: 'Timestamp of data collection.'
      multipleMailpieceIdRecognized:
        type: boolean
        description: 'True when multiple identcodes were recognized by the camera.'
      sourceId:
        type: string
        description: 'Refers to a module id as event-source (e.g. DWS02, CLC19).'
      mailpieceType:
        $ref: 'MailpieceType'
        description: 'Type of mailpiece.'
      boxId:
        type: number
        description: "Identifies the DX-Box.\nFirst two digits: Type of box: \"45\" for ThermoCare box.\nLast six digits: Serial number of the box (example: 45093456)"
        maxLength: 8
      images:
        type: array
        items:
          $ref: 'Image'
        description: 'The images captured during coding.'
      physicalProperties:
        $ref: 'PhysicalProperties'
        description: "Physical information about the mailpiece.\nIt includes information on weight and dimension."
      conveyingAid:
        type: number
        description: "Type of conveying aid (used in the regional parcel centers).\nFormat: First two digits: type of aid.\nLast four digits: weight of the aid in grams.\nExample: 020450"
        maxLength: 6
      barcodeList:
        type: array
        items:
          $ref: 'InformationCarrier'
        description: 'List with all barcodes read.'
      blockId:
        $ref: 'UUID'
        description: 'Identifier to track a group of parcels.'
    additionalProperties: false
  SortingUnit:
    type: object
    properties:
      sortingUnitKey:
        type: string
        description: 'Unique key identifying the sorting unit.'
        maxLength: 200
      locationKey:
        type: string
        description: 'Unique key identifying the location.'
        maxLength: 200
    required:
      - sortingUnitKey
      - locationKey
    additionalProperties: false
    description: 'Sorting unit where the mailpiece was being read.'
